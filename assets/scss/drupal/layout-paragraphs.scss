// Give the paragraphs some breathing room.
.field--widget-layout-paragraphs {
  margin-top: map-get($spacers, 4);
  margin-bottom: map-get($spacers, 4);
}

.lpb-enable {
  z-index: 100;
}

.lpb-layout {
  padding: map-get($spacers, 4);
}

.lpb-formatter:hover,
.lpb-formatter:focus-within {
  @include border-radius($btn-border-radius);

  outline-color: var(--bs-primary);
}

form.layout-paragraphs-builder-form .js-lpb-component-list {
  padding: 0;
}

a.lpb-enable-button,
.lpb-controls.is-layout {
  background: var(--bs-primary);
}

.lpb-tooltiptext {
  @include font-size($tooltip-font-size);
  @include border-radius($tooltip-border-radius);

  margin: $tooltip-font-size;
  padding: $tooltip-arrow-height;
  word-wrap: break-word;
  color: $tooltip-color;
  background-color: $tooltip-bg;
}

.lp-builder:not(.is-navigating) .js-lpb-component:hover,
.lp-builder:not(.is-navigating) .js-lpb-component:focus-within {
  outline-color: var(--bs-primary);
}

a.lpb-enable-button,
.lpb-btn {
  @include transition($btn-transition);
  @include font-size($btn-font-size);
  @include border-radius($btn-border-radius);

  display: inline-flex;
  padding: $btn-padding-y $btn-padding-x !important;
  cursor: pointer;
  user-select: none;
  text-align: center;
  vertical-align: middle;
  white-space: $btn-white-space;
  text-decoration: none;
  color: var(--bs-white);
  background: var(--bs-primary);
  box-shadow: $btn-box-shadow !important;
  font-weight: $btn-font-weight;
  line-height: $btn-line-height;

  &:hover {
    color: var(--bs-white);
    background: var(--bs-teal);
  }
}

.lpb-enable__empty-message__wrapper {
  @include border-radius($btn-border-radius);

  padding: map-get($spacers, 4);
  border: var(--bs-border-width) solid var(--bs-border-color-translucent);
}

.lpb-enable__empty-message {
  .lpb-enable-button {
    display: flex;
    width: fit-content;
    margin-top: map-get($spacers, 4);
  }
}

a.lpb-enable-button::before {
  width: 1.2em;
  margin-right: map-get($spacers, 2);
}

.lpb-btn.before {
  top: #{-1 * map-get($spacers, 4)};
}

.lpb-btn.after {
  bottom: #{-1 * map-get($spacers, 4)};
}

.lpb-btn--add.before {
  top: #{-1 * map-get($spacers, 3)};
}

.lpb-btn--add.after {
  bottom: #{-1 * map-get($spacers, 3)};
}

.lpb-component-list {
  .lpb-component-list-search-input {
    @include font-size($input-font-size);
    @include border-radius($input-border-radius, 0);
    @include box-shadow($input-box-shadow);
    @include transition($input-transition);

    display: block;
    width: 100%;
    padding: $input-padding-y $input-padding-x;
    color: $input-color;
    border: $input-border-width solid $input-border-color;
    background-color: $input-bg;
    background-clip: padding-box;
    font-family: $input-font-family;
    font-weight: $input-font-weight;
    line-height: $input-line-height;
    appearance: none; // Fix appearance for date inputs in Safari
    &:focus {
      color: $input-focus-color;
      border-color: $input-focus-border-color;
      outline: 0;
      background-color: $input-focus-bg;

      @if $enable-shadows {
        @include box-shadow($input-box-shadow, $input-focus-box-shadow);
      } @else {
        // Avoid using mixin so we can pass custom focus shadow properly
        box-shadow: $input-focus-box-shadow;
      }
    }
  }
  .lpb-component-list__group {
    margin-top: map-get($spacers, 2);
  }

  .lpb-component-list__item {
    border-top: var(--bs-border-width) solid var(--bs-border-color-translucent);

    a {
      @include transition($btn-transition);
      @include font-size($font-size-sm);
      @include border-radius();

      position: relative;
      margin: 0;
      padding: map-get($spacers, 2);
      text-decoration: none;

      &:hover {
        color: var(--bs-white);
        background: var(--bs-primary);

        img {
          filter: invert(1);
        }
      }
    }
  }
}

#layout-paragraphs-element {
  .form-wrapper + .form-wrapper {
    margin-top: map-get($spacers, 3);
  }
}
