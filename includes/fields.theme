<?php

/**
 * @file
 * DVB field alterations.
 */

declare(strict_types=1);

use Drupal\Core\Entity\FieldableEntityInterface;
use Drupal\Core\Render\Element;

/**
 * Implements hook_theme_suggestions_HOOK_alter().
 *
 * - Add field type and view mode suggestions to field.
 */
function dvb_theme_suggestions_field_alter(array &$suggestions, array $variables): void {
  $element = $variables['element'];

  // Inject at specific position. @see system_theme_suggestions_field().
  $pos = 1;
  $suggestions = array_merge(
    array_slice($suggestions, 0, $pos),
    ['field__' . $element['#field_type'] . '__' . $element['#formatter']],
    array_slice($suggestions, $pos)
  );

  if (!empty($element['#view_mode']) || !empty($element['#ds_view_mode'])) {
    $view_mode = $element['#ds_view_mode'] ?? $element['#view_mode'];
    foreach ($suggestions as $suggestion) {
      $suggestions[] = $suggestion . '__' . $view_mode;
    }
  }
}

/**
 * Implements hook_preprocess_field_group_accordion_item().
 *
 * - Get the entity from the first child element within the group.
 * - Set the value of title to any field_title on entity.
 */
function dvb_preprocess_field_group_accordion_item(array &$variables): void {
  $element = $variables['element'];

  foreach (Element::children($element) as $child_name) {
    if ($entity = $element[$child_name]['#object'] ?? NULL) {
      break;
    }
  }

  if (isset($entity) && $entity instanceof FieldableEntityInterface && $entity->hasField('field_title')) {
    $variables['title'] = $entity->field_title->value;
  }
}
